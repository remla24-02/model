name: Linting

on:
  push:
    branches:
      - '**'
    tags-ignore:
      - '*'

permissions:
  contents: write

jobs:
  lint:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pylint

    - name: Run pylint and save results
      id: run_pylint
      run: |
        pylint src/ > pylint_report.txt || true
        pylint src/ | tee pylint_report.txt

    - name: Extract pylint score
      id: extract_score
      run: |
        score=$(grep 'rated at' pylint_report.txt | sed -n 's/.* \([0-9]*\.[0-9]*\)\/10.*/\1/p')
        echo "::set-output name=score::$score"

    - name: Set summary name
      if: always()
      run: |
        echo "Linting score: ${{ steps.extract_score.outputs.score }}"

    - name: Determine badge color
      id: badge_color
      run: |
        score=${{ steps.extract_score.outputs.score }}
        if (( $(echo "$score > 9" |bc -l) )); then
          color=brightgreen
        elif (( $(echo "$score >= 7" |bc -l) )); then
          color=orange
        else
          color=red
        fi
        echo "::set-output name=color::$color"

    - name: Update README with pylint badge
      run: |
        score=${{ steps.extract_score.outputs.score }}
        color=${{ steps.badge_color.outputs.color }}
        badge_url="https://img.shields.io/badge/pylint-${score}-${color}"
        # Update the badge URL in the README
        sed -i 's|!\[Pylint Score\](.*)|![Pylint Score]('"${badge_url}"')|' README.md || echo "![Pylint Score](${badge_url})" >> README.md
        git config --global user.name 'github-actions[bot]'
        git config --global user.email 'github-actions[bot]@users.noreply.github.com'
        git add README.md
        if ! git diff-index --quiet HEAD; then
          git commit -m 'Update README with pylint score badge'
          git push
        else
          echo "No changes to commit"
        fi
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
